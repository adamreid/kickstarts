# Kickstart file automatically generated by anaconda.

install
cdrom
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
rootpw  vagrant
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --permissive
timezone --utc Etc/UTC
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
clearpart --all --drives=sda
part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1

volgroup VolGroup --pesize=4096 pv.008002
logvol / --fstype=ext4 --name=lv_root --vgname=VolGroup --grow --size=1024 --maxsize=10000
logvol swap --name=lv_swap --vgname=VolGroup --grow --size=992 --maxsize=992



%packages --nobase
@core
@base

# required to build ruby
# should be kept for gems that build native extensions.
automake
make
autoconf
gcc
cpp
glibc-devel
glibc-headers
glibc-kernheaders
glibc
glibc-common
libgcc

# required to build ruby bindings, can be removed after
zlib-devel
openssl-devel
readline-devel

%post

# Change to a vt to see progress

exec < /dev/tty3 > /dev/tty3
chvt 3

# redirect output to ks-post.log including stdout and stderr
(
	#######################################################
	# Build Ruby and RubyGems
	#######################################################
	# Keep it clean
	mkdir /tmp/ruby
	cd /tmp/ruby

	# build ruby-1.8.7-p358
	wget http://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p358.tar.bz2
	tar -xjf ruby-1.8.7-p358.tar.bz2
	cd ruby-1.8.7-p358
	autoconf
	./configure --prefix=/usr && make && make install
	cd /tmp/ruby

	# install ruby-gems 1.8.10
	wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.10.tgz
	tar -xzf rubygems-1.8.10.tgz
	cd rubygems-1.8.10
	/usr/bin/ruby setup.rb


	# clean up
	cd /
	rm -rf /tmp/ruby

	#######################################################
	# Install Puppet & Chef
	#######################################################
	gem install puppet --no-rdoc --no-ri -v 2.7.20
	gem install chef --no-rdoc --no-ri

	# add the puppet group
	groupadd puppet

	#######################################################
	# Install VirtualBox Guest Additions
	#
	# Note: You will need change the VBOX_VERSION to the
	# VirtualBox version you currently use if it's older.
	#######################################################
	VBOX_VERSION=4.2.4
	cd /tmp
	wget http://download.virtualbox.org/virtualbox/${VBOX_VERSION}/VBoxGuestAdditions_${VBOX_VERSION}.iso
	mkdir /tmp/isomount
	mount -t iso9660 -o loop /tmp/VBoxGuestAdditions_${VBOX_VERSION}.iso /tmp/isomount

	/tmp/isomount/VBoxLinuxAdditions.run
	umount isomount
	rm VBoxGuestAdditions_${VBOX_VERSION}.iso

	#######################################################
	# Turn off un-needed services
	#######################################################
	chkconfig sendmail off
	chkconfig vbox-add-x11 off
	chkconfig smartd off
	chkconfig ntpd off
	chkconfig cupsd off

	#######################################################
	# Setup for Vagrant
	#######################################################
	# Add vagrant user & group
	/usr/sbin/groupadd vagrant
	/usr/sbin/useradd vagrant -g vagrant -G wheel
	echo "vagrant"|passwd --stdin vagrant
	echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
	chmod 0440 /etc/sudoers.d/vagrant

	# modify sudoer defaults for vagrant
	sed -i 's/Defaults\s*requiretty/#Defaults requiretty/' /etc/sudoers

	# Installing vagrant keys
	mkdir -pm 700 /home/vagrant/.ssh
	wget --no-check-certificate 'https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub' -O /home/vagrant/.ssh/authorized_keys
	chmod 0600 /home/vagrant/.ssh/authorized_keys
	chown -R vagrant /home/vagrant/.ssh
	# If SELinux is enforcing:
	#restorecon -v -R /home

	# Create the /vagrant directory for shared folders
	mkdir -p /vagrant
	chown vagrant /vagrant

	# Remove machine specific values from ifcfg-eth0
	sed -i 's/^HWADDR.*$//g' /etc/sysconfig/network-scripts/ifcfg-eth0
	sed -i 's/^UUID.*$//g' /etc/sysconfig/network-scripts/ifcfg-eth0


	# Clean up unused disk space so compressed image is smaller.
	cat /dev/zero > /tmp/zero.fill
	rm /tmp/zero.fill

	#######################################################
	# The system can now be packaged with
	# `vagrant package VMNAME`
	#######################################################
	echo 'You can now package this box with `vagrant package VMNAME`'

) 2>&1 | /usr/bin/tee /root/ks-post.log

# switch back to installer
chvt 1
%end